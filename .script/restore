#!/bin/bash

BACKUP_FILE=/tmp/backup/dumpdetudo.sql

 # Check if backup file exists as /tmp/backup/dumpdetudo.sql
if [ ! -f $BACKUP_FILE ]; then

    # Check if the backup file was provided at a first argument
    if [ -z "$1" ]; then
        echo "Backup file was not found, se below two ways to provide it:"
        echo " - provide the backup file at .backup dir as dumpdetudo.sql"   
        echo " - pass the backup file (existent into .backup) as a first argument. Example: restore [NAME_OF_THE_BACKUP_FILE.sql]"
        exit 1
    else
        BACKUP_FILE=/tmp/backup/$1
    fi
fi


# List & Delete all databases
echo "Listing all databases"

psql -U postgres -p 54323 -q -t -c "SELECT 'DROP DATABASE \"' || datname || '\";' FROM pg_database WHERE datname <> ALL ('{template0,template1,postgres}')" > /tmp/drop-all-databases.sql

echo "Listing all databases [✔️]"

if [ -s /tmp/drop-all-databases.sql ]; then
    echo "Deleting all databases"

    psql -U postgres -p 54323 -q -f /tmp/drop-all-databases.sql

    echo "Deleting all databases [✔️]"
fi

# List & Delete all roles
echo "Listing all roles"
psql -U postgres -p 54323 -q -t -c "SELECT 'DROP ROLE \"' || rolname || '\";' FROM pg_roles WHERE rolname NOT LIKE 'pg%' AND rolname <> 'postgres';" > /tmp/drop-all-roles.sql
echo "Listing all roles [✔️]"

if [ -s /tmp/drop-all-roles.sql ]; then
    echo "Deleting all roles"

    psql -U postgres -p 54323 -q -f /tmp/drop-all-roles.sql

    echo "Deleting all roles [✔️]"
fi

# Restore the backup
echo "Restoring the backup"

psql -U postgres -p 54323 -P pager=off -f $BACKUP_FILE > /dev/null

echo "Restoring the backup [✔️]"

# Set the password for the postgres user
echo "Setting the password for the postgres user"

psql -U postgres -p 54323 -q -c "ALTER USER postgres WITH PASSWORD 'postgres';"

echo "Setting the password for the postgres user [✔️]"

# Set the hostPort for the 'dumpdetudo:54323' from the 'rede' database, in the 'redeservico' table
echo "Setting the hostPort for the 'dumpdetudo:54323' from the 'rede' database, in the 'redeservico' table"

psql -U postgres -p 54323 -d rede -q -c "delete from redeservico;"
psql -U postgres -p 54323 -d rede -q -c "insert into redeservico (\"hostPort\", servico, \"idRede\") select 'dumpdetudo:54323', '0', id from rede order by id;"

echo "Setting the hostPort for the 'dumpdetudo:54323' from the 'rede' database, in the 'redeservico' table [✔️]"

echo "Done! [✔️]"